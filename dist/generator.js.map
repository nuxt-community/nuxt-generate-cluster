{"version":3,"file":"generator.js","sources":["../node_modules/nuxt/lib/common/utils.js","../lib/generator.js"],"sourcesContent":["import { resolve, relative, sep } from 'path'\nimport _ from 'lodash'\n\nexport function encodeHtml (str) {\n  return str.replace(/</g, '&lt;').replace(/>/g, '&gt;')\n}\n\nexport function getContext (req, res) {\n  return { req, res }\n}\n\nexport function setAnsiColors (ansiHTML) {\n  ansiHTML.setColors({\n    reset: ['efefef', 'a6004c'],\n    darkgrey: '5a012b',\n    yellow: 'ffab07',\n    green: 'aeefba',\n    magenta: 'ff84bf',\n    blue: '3505a0',\n    cyan: '56eaec',\n    red: '4e053a'\n  })\n}\n\nexport async function waitFor (ms) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, (ms || 0))\n  })\n}\n\nexport function urlJoin () {\n  return [].slice.call(arguments).join('/').replace(/\\/+/g, '/').replace(':/', '://')\n}\n\nexport function isUrl (url) {\n  return (url.indexOf('http') === 0 || url.indexOf('//') === 0)\n}\n\nexport function promisifyRoute (fn) {\n  // If routes is an array\n  if (Array.isArray(fn)) {\n    return Promise.resolve(fn)\n  }\n  // If routes is a function expecting a callback\n  if (fn.length === 1) {\n    return new Promise((resolve, reject) => {\n      fn(function (err, routeParams) {\n        if (err) {\n          reject(err)\n        }\n        resolve(routeParams)\n      })\n    })\n  }\n  let promise = fn()\n  if (!promise || (!(promise instanceof Promise) && (typeof promise.then !== 'function'))) {\n    promise = Promise.resolve(promise)\n  }\n  return promise\n}\n\nexport function sequence (tasks, fn) {\n  return tasks.reduce((promise, task) => promise.then(() => fn(task)), Promise.resolve())\n}\n\nexport function parallel (tasks, fn) {\n  return Promise.all(tasks.map(task => fn(task)))\n}\n\nexport function chainFn (base, fn) {\n  /* istanbul ignore if */\n  if (!(fn instanceof Function)) {\n    return\n  }\n  return function () {\n    if (typeof base !== 'function') {\n      return fn.apply(this, arguments)\n    }\n    let baseResult = base.apply(this, arguments)\n    // Allow function to mutate the first argument instead of returning the result\n    if (baseResult === undefined) {\n      baseResult = arguments[0]\n    }\n    let fnResult = fn.call(this, baseResult, ...Array.prototype.slice.call(arguments, 1))\n    // Return mutated argument if no result was returned\n    if (fnResult === undefined) {\n      return baseResult\n    }\n    return fnResult\n  }\n}\n\nexport function isPureObject (o) {\n  return !Array.isArray(o) && typeof o === 'object'\n}\n\nexport const isWindows = /^win/.test(process.platform)\n\nexport function wp (p = '') {\n  /* istanbul ignore if */\n  if (isWindows) {\n    return p.replace(/\\\\/g, '\\\\\\\\')\n  }\n  return p\n}\n\nexport function wChunk (p = '') {\n  /* istanbul ignore if */\n  if (isWindows) {\n    return p.replace(/\\//g, '\\\\\\\\')\n  }\n  return p\n}\n\nconst reqSep = /\\//g\nconst sysSep = _.escapeRegExp(sep)\nconst normalize = string => string.replace(reqSep, sysSep)\n\nexport function r () {\n  let args = Array.prototype.slice.apply(arguments)\n  let lastArg = _.last(args)\n\n  if (lastArg.includes('@') || lastArg.includes('~')) {\n    return wp(lastArg)\n  }\n\n  return wp(resolve(...args.map(normalize)))\n}\n\nexport function relativeTo () {\n  let args = Array.prototype.slice.apply(arguments)\n  let dir = args.shift()\n\n  // Resolve path\n  let path = r(...args)\n\n  // Check if path is an alias\n  if (path.includes('@') || path.includes('~')) {\n    return path\n  }\n\n  // Make correct relative path\n  let rp = relative(dir, path)\n  if (rp[0] !== '.') {\n    rp = './' + rp\n  }\n  return wp(rp)\n}\n\nexport function flatRoutes (router, path = '', routes = []) {\n  router.forEach((r) => {\n    if (!r.path.includes(':') && !r.path.includes('*')) {\n      /* istanbul ignore if */\n      if (r.children) {\n        flatRoutes(r.children, path + r.path + '/', routes)\n      } else {\n        routes.push((r.path === '' && path[path.length - 1] === '/' ? path.slice(0, -1) : path) + r.path)\n      }\n    }\n  })\n  return routes\n}\n\nexport function cleanChildrenRoutes (routes, isChild = false) {\n  let start = -1\n  let routesIndex = []\n  routes.forEach((route) => {\n    if (/-index$/.test(route.name) || route.name === 'index') {\n      // Save indexOf 'index' key in name\n      let res = route.name.split('-')\n      let s = res.indexOf('index')\n      start = (start === -1 || s < start) ? s : start\n      routesIndex.push(res)\n    }\n  })\n  routes.forEach((route) => {\n    route.path = (isChild) ? route.path.replace('/', '') : route.path\n    if (route.path.indexOf('?') > -1) {\n      let names = route.name.split('-')\n      let paths = route.path.split('/')\n      if (!isChild) {\n        paths.shift()\n      } // clean first / for parents\n      routesIndex.forEach((r) => {\n        let i = r.indexOf('index') - start //  children names\n        if (i < paths.length) {\n          for (let a = 0; a <= i; a++) {\n            if (a === i) {\n              paths[a] = paths[a].replace('?', '')\n            }\n            if (a < i && names[a] !== r[a]) {\n              break\n            }\n          }\n        }\n      })\n      route.path = (isChild ? '' : '/') + paths.join('/')\n    }\n    route.name = route.name.replace(/-index$/, '')\n    if (route.children) {\n      if (route.children.find((child) => child.path === '')) {\n        delete route.name\n      }\n      route.children = cleanChildrenRoutes(route.children, true)\n    }\n  })\n  return routes\n}\n\nexport function createRoutes (files, srcDir) {\n  let routes = []\n  files.forEach((file) => {\n    let keys = file.replace(/^pages/, '').replace(/\\.vue$/, '').replace(/\\/{2,}/g, '/').split('/').slice(1)\n    let route = { name: '', path: '', component: r(srcDir, file) }\n    let parent = routes\n    keys.forEach((key, i) => {\n      route.name = route.name ? route.name + '-' + key.replace('_', '') : key.replace('_', '')\n      route.name += (key === '_') ? 'all' : ''\n      route.chunkName = file.replace(/\\.vue$/, '')\n      let child = _.find(parent, { name: route.name })\n      if (child) {\n        child.children = child.children || []\n        parent = child.children\n        route.path = ''\n      } else {\n        if (key === 'index' && (i + 1) === keys.length) {\n          route.path += (i > 0 ? '' : '/')\n        } else {\n          route.path += '/' + (key === '_' ? '*' : key.replace('_', ':'))\n          if (key !== '_' && key.indexOf('_') !== -1) {\n            route.path += '?'\n          }\n        }\n      }\n    })\n    // Order Routes path\n    parent.push(route)\n    parent.sort((a, b) => {\n      if (!a.path.length || a.path === '/') {\n        return -1\n      }\n      if (!b.path.length || b.path === '/') {\n        return 1\n      }\n      let i = 0\n      let res = 0\n      let y = 0\n      let z = 0\n      const _a = a.path.split('/')\n      const _b = b.path.split('/')\n      for (i = 0; i < _a.length; i++) {\n        if (res !== 0) {\n          break\n        }\n        y = _a[i] === '*' ? 2 : (_a[i].indexOf(':') > -1 ? 1 : 0)\n        z = _b[i] === '*' ? 2 : (_b[i].indexOf(':') > -1 ? 1 : 0)\n        res = y - z\n        // If a.length >= b.length\n        if (i === _b.length - 1 && res === 0) {\n          // change order if * found\n          res = _a[i] === '*' ? -1 : 1\n        }\n      }\n      return res === 0 ? (_a[i - 1] === '*' && _b[i] ? 1 : -1) : res\n    })\n  })\n  return cleanChildrenRoutes(routes)\n}\n","import { copy, remove, writeFile, mkdirp, removeSync, existsSync } from 'fs-extra'\nimport _ from 'lodash'\nimport { resolve, join, dirname, sep } from 'path'\nimport { minify } from 'html-minifier'\nimport Tapable from 'tappable'\nimport { isUrl, promisifyRoute, waitFor, flatRoutes } from 'utils'\nimport Debug from 'debug'\nimport { isMaster } from 'cluster'\n\nconst debug = Debug('nuxt:generate')\n\nexport default class Generator extends Tapable {\n  constructor (nuxt, builder) {\n    super()\n    this.nuxt = nuxt\n    this.options = nuxt.options\n    this.builder = builder\n\n    // Set variables\n    this.staticRoutes = resolve(this.options.srcDir, 'static')\n    this.srcBuiltPath = resolve(this.options.buildDir, 'dist')\n    this.distPath = resolve(this.options.rootDir, this.options.generate.dir)\n    this.distNuxtPath = join(this.distPath, (isUrl(this.options.build.publicPath) ? '' : this.options.build.publicPath))\n  }\n\n  async generate ({ build = true, init = true } = {}) {\n    const s = Date.now()\n\n    await this.initiate({ build: build, init: init })\n    const routes = await this.initRoutes()\n    const errors = await this.generateRoutes(routes)\n    await this.postGenerate()\n\n    const duration = Math.round((Date.now() - s) / 100) / 10\n    this.printReport(duration, errors)\n\n    return { duration, errors }\n  }\n\n  printReport (duration, errors) {\n    debug(`HTML Files generated in ${duration}s`)\n\n    if (errors.length) {\n      const report = errors.map(({ type, route, error }) => {\n        /* istanbul ignore if */\n        if (type === 'unhandled') {\n          return `Route: '${route}'\\n${error.stack}`\n        } else {\n          return `Route: '${route}' thrown an error: \\n` + JSON.stringify(error)\n        }\n      })\n      console.error('==== Error report ==== \\n' + report.join('\\n\\n')) // eslint-disable-line no-console\n    }\n  }\n\n  async initiate ({ build = true, init = true } = {}) {\n\n    // Add flag to set process.static\n    if (build) {\n      this.builder.forGenerate()\n    }\n\n    // Wait for nuxt be ready\n    await this.nuxt.ready()\n\n    // Start build process\n    if (build) {\n      await this.builder.build()\n    }\n\n    await this.nuxt.applyPluginsAsync('generator', this)\n\n    // Initialize dist directory\n    if (init) {\n      await this.initDist()\n    }\n  }\n\n  async initRoutes (params) {\n    // Resolve config.generate.routes promises before generating the routes\n    let generateRoutes = []\n    if (this.options.router.mode !== 'hash') {\n      try {\n        debug('Generating routes')\n        generateRoutes = await promisifyRoute((callback) => { \n          if (this.options.generate.routes) {\n            const promise = this.options.generate.routes(callback, params)\n            if (promise instanceof Promise && typeof promise.then === 'function') {\n              return promise.then((routes) => { callback(null, routes); })\n            }\n          } else {\n            return []\n          }\n        })\n        await this.applyPluginsAsync('generateRoutes', { generator: this, generateRoutes })\n      } catch (e) {\n        console.error('Could not resolve routes') // eslint-disable-line no-console\n        console.error(e) // eslint-disable-line no-console\n        throw e // eslint-disable-line no-unreachable\n      }\n    }\n\n    // Generate only index.html for router.mode = 'hash'\n    let routes = (this.options.router.mode === 'hash') ? ['/'] : flatRoutes(this.options.router.routes)\n    routes = this.decorateWithPayloads(routes, generateRoutes)\n\n    return routes\n  }\n\n  async generateRoutes (routes) {\n    let errors = []\n\n    await this.applyPluginsAsync('generate', {generator: this, routes})\n\n    // Start generate process\n    while (routes.length) {\n      let n = 0\n      await Promise.all(routes.splice(0, this.options.generate.concurrency).map(async ({ route, payload }) => {\n        await waitFor(n++ * this.options.generate.interval)\n        await this.generateRoute({ route, payload, errors })\n      }))\n    }\n    \n    await this.applyPluginsAsync('generated', this)\n\n    return errors\n  }\n\n  async postGenerate() {\n    const indexPath = join(this.distPath, 'index.html')\n    if (existsSync(indexPath)) {\n      // Copy /index.html to /200.html for surge SPA\n      // https://surge.sh/help/adding-a-200-page-for-client-side-routing\n      const _200Path = join(this.distPath, '200.html')\n      if (!existsSync(_200Path)) {\n        await copy(indexPath, _200Path)\n      }\n    }\n  }\n\n  async initDist () {\n    // Clean destination folder\n    await remove(this.distPath)\n    debug('Destination folder cleaned')\n\n    // Copy static and built files\n    /* istanbul ignore if */\n    if (existsSync(this.staticRoutes)) {\n      await copy(this.staticRoutes, this.distPath)\n    }\n    await copy(this.srcBuiltPath, this.distNuxtPath)\n\n    // Add .nojekyll file to let Github Pages add the _nuxt/ folder\n    // https://help.github.com/articles/files-that-start-with-an-underscore-are-missing/\n    const nojekyllPath = resolve(this.distPath, '.nojekyll')\n    writeFile(nojekyllPath, '')\n\n    // Cleanup SSR related files\n    const extraFiles = [\n      'index.spa.html',\n      'index.ssr.html',\n      'server-bundle.json',\n      'vue-ssr-client-manifest.json'\n    ].map(file => resolve(this.distNuxtPath, file))\n\n    extraFiles.forEach(file => {\n      if (existsSync(file)) {\n        removeSync(file)\n      }\n    })\n\n    debug('Static & build files copied')\n  }\n\n  decorateWithPayloads (routes, generateRoutes) {\n    let routeMap = {}\n    // Fill routeMap for known routes\n    routes.forEach((route) => {\n      routeMap[route] = {\n        route,\n        payload: null\n      }\n    })\n    // Fill routeMap with given generate.routes\n    generateRoutes.forEach((route) => {\n      // route is either a string or like {route : \"/my_route/1\"}\n      const path = _.isString(route) ? route : route.route\n      routeMap[path] = {\n        route: path,\n        payload: route.payload || null\n      }\n    })\n    return _.values(routeMap)\n  }\n\n  async generateRoute ({ route, payload = {}, errors = [] }) {\n    let html\n\n    try {\n      const res = await this.nuxt.renderer.renderRoute(route, { _generate: true, payload })\n      html = res.html\n      if (res.error) {\n        errors.push({ type: 'handled', route, error: res.error })\n      }\n    } catch (err) {\n      /* istanbul ignore next */\n      return errors.push({ type: 'unhandled', route, error: err })\n    }\n\n    if (this.options.generate.minify) {\n      try {\n        html = minify(html, this.options.generate.minify)\n      } catch (err) /* istanbul ignore next */ {\n        const minifyErr = new Error(`HTML minification failed. Make sure the route generates valid HTML. Failed HTML:\\n ${html}`)\n        errors.push({ type: 'unhandled', route, error: minifyErr })\n      }\n    }\n\n    let path = join(route, sep, 'index.html') // /about -> /about/index.html\n    path = (path === '/404/index.html') ? '/404.html' : path // /404 -> /404.html\n    debug((!isMaster ? `Worker ${process.pid}: ` : '') + 'Generate file: ' + path)\n    path = join(this.distPath, path)\n\n    // Make sure the sub folders are created\n    await mkdirp(dirname(path))\n    await writeFile(path, html, 'utf8')\n\n    return true\n  }\n}\n"],"names":["ms","Promise","resolve","waitFor","isUrl","url","indexOf","promisifyRoute","fn","Array","isArray","length","reject","err","routeParams","promise","then","isWindows","test","process","platform","sysSep","_","escapeRegExp","sep","flatRoutes","router","path","routes","forEach","r","includes","children","push","slice","debug","Debug","Generator","Tapable","nuxt","builder","options","staticRoutes","srcDir","srcBuiltPath","buildDir","distPath","rootDir","generate","dir","distNuxtPath","join","build","publicPath","init","s","Date","now","initiate","initRoutes","errors","generateRoutes","postGenerate","duration","Math","round","printReport","report","map","type","route","error","stack","JSON","stringify","forGenerate","ready","applyPluginsAsync","initDist","params","mode","callback","generator","e","decorateWithPayloads","n","all","splice","concurrency","payload","interval","generateRoute","indexPath","existsSync","_200Path","copy","remove","nojekyllPath","extraFiles","file","routeMap","isString","values","html","res","renderer","renderRoute","_generate","minify","minifyErr","Error","isMaster","pid","mkdirp","dirname","writeFile"],"mappings":"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"}